name: 构建 Windows 版 FFmpeg (AV3A版本)

on:
  workflow_dispatch:
    inputs:
      ENABLED_DECODERS:
        description: "启用的解码器"
        required: true
        default: 'vorbis opus flac alac pcm_mulaw pcm_alaw mp3 amrnb amrwb aac ac3 eac3 dca mlp truehd libarcdav3a'
      FFMPEG_RELEASE_BRANCH:
        description: "FFmpeg 分支"
        required: true
        default: 'main'

jobs:
  build_Windows_FFmpeg2:
    runs-on: ubuntu-latest

    steps:
      # 第一步：检出代码仓库
      - name: 检出仓库
        uses: actions/checkout@v4

      # 第二步：安装必要的编译工具链
      - name: 安装编译工具链
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential mingw-w64 nasm pkg-config

      # 第三步：克隆特定版本的 FFmpeg 源代码
      - name: 获取 FFmpeg-AV3A 源代码
        run: |
          git clone https://github.com/WoKee/ffmpeg-av3a.git ffmpeg
          cd ffmpeg
          git checkout ${{ github.event.inputs.FFMPEG_RELEASE_BRANCH }}
          chmod +x configure

      - name: 手动编译 dlfcn-win32
        run: |
          sudo apt-get install -y git build-essential mingw-w64
          git clone https://github.com/dlfcn-win32/dlfcn-win32.git
          cd dlfcn-win32
          cat > Makefile.mingw << 'EOF'
          CC = x86_64-w64-mingw32-gcc
          AR = x86_64-w64-mingw32-ar
          CFLAGS = -I./include -Wall -O2
          TARGET = libdl.a
          SRC = src/dlfcn.c
          OBJ = $(SRC:.c=.o)
      
          all: $(TARGET)
      
          $(TARGET): $(OBJ)
            $(AR) rcs $@ $^
      
          %.o: %.c
            $(CC) $(CFLAGS) -c $< -o $@
      
          install:
            mkdir -p /usr/x86_64-w64-mingw32/include/
            mkdir -p /usr/x86_64-w64-mingw32/lib/
            cp include/dlfcn.h /usr/x86_64-w64-mingw32/include/
            cp libdl.a /usr/x86_64-w64-mingw32/lib/
      
          clean:
            rm -f $(OBJ) $(TARGET)
          EOF
          make -f Makefile.mingw
          sudo make -f Makefile.mingw install

      # 第四步：配置和编译 FFmpeg
      - name: 编译 Windows 版 FFmpeg
        run: |
          cd ffmpeg
          # 确保脚本可执行
          chmod +x ffbuild/pkgconfig_generate.sh
          chmod +x compat/windows/makedef
          # 设置编译参数
          ENABLED_DECODERS=(${{ github.event.inputs.ENABLED_DECODERS }})
          
          # 配置编译选项
          ./configure \
            --arch=x86_64 \
            --target-os=mingw32 \
            --cross-prefix=x86_64-w64-mingw32- \
            --extra-cflags="-I/usr/x86_64-w64-mingw32/include" \
            --extra-ldflags="-L/usr/x86_64-w64-mingw32/lib -ldl" \
            --prefix=./build \
            --enable-libarcdav3a\
            --enable-static \
            --disable-shared \
            --enable-version3
          
          # 开始编译
          make -j$(nproc)
          make install

      # 第五步：打包生成的可执行文件
      - name: 打包 FFmpeg
        run: |
          cd ffmpeg/build/bin
          mkdir -p ffmpeg-windows
          cp *.exe ffmpeg-windows/
          zip -r ffmpeg-windows.zip ffmpeg-windows

      # 第六步：上传生成的压缩包
      - name: 上传 FFmpeg 可执行文件
        uses: actions/upload-artifact@v4
        with:
          name: FFmpeg-Windows-AV3A
          path: ffmpeg/build/bin/ffmpeg-windows.zip
